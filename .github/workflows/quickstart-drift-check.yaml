# Run drift checks manually or on cron
name: Drift Check

on:
  workflow_call:
    inputs:
      auth-mode:
        description: Authentication mode (aws-oidc, aws-cred (deprecated), or gcp-oidc)
        type: string
        default: aws-oidc
      aws-region:
        description: AWS region (required when auth-mode is aws-oidc)
        type: string
        default: ap-northeast-1
      aws-role:
        description: >-
          AWS role to assume (required when auth-mode is aws-oidc)
          e.g. arn:aws:iam::0123456789:role/my-plan-role-name
        type: string
      gcp-project:
        description: GCP project ID (required when auth-mode is gcp-oidc)
        type: string
      gcp-idp:
        description: >-
          GCP workload identity provider (required when auth-mode is gcp-oidc)
          e.g. projects/0123456789/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider
        type: string

    secrets:
      aws-cred:
        description: AWS credentials (required when auth-mode is aws-cred)
        required: false

      drift-notify-webhook:
        description: Slack webhook URL for drift notification (if omitted, the step fails on detecting drift)
        required: false

      github-token:
        description: GitHub token for creating PR in automatic drift fix (optional, required for triggering workflows)
        required: false
      anthropic-api-key:
        description: Anthropic API key for automatic drift fix
        required: false
      claude-code-oauth-token:
        description: Claude code OAuth token for automatic drift fix
        required: false

permissions:
  contents: write
  actions: read
  pull-requests: write
  id-token: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - id: prepare
        uses: gmo-media/tofu-actions/prepare@v4
        with:
          force-all-changed: 'true'
    outputs:
      strategy: ${{ steps.prepare.outputs.strategy }}

  drift-check:
    needs: [ prepare ]
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.strategy) }}
    runs-on: ubuntu-latest
    steps:
      - uses: gmo-media/tofu-actions/configure@v4
        with:
          dir: ${{ matrix.dir }}
          auth-mode: ${{ inputs.auth-mode }}
          aws-region: ${{ inputs.aws-region }}
          aws-role: ${{ inputs.aws-role }}
          aws-cred: ${{ secrets.aws-cred }}
          gcp-project: ${{ inputs.gcp-project }}
          gcp-idp: ${{ inputs.gcp-idp }}

      - id: plan
        uses: gmo-media/tofu-actions/plan@v4
        with:
          dir: ${{ matrix.dir }}

      # NOTE: "if" condition cannot reference "secrets" directly, so use shell steps as a workaround
      - id: check-webhook
        shell: bash
        run: |
          if [ -n "${{ secrets.drift-notify-webhook }}" ]; then
            echo "do-notify=true" >> $GITHUB_OUTPUT
          else
            echo "do-notify=false" >> $GITHUB_OUTPUT
          fi
      - id: check-auto-fix
        shell: bash
        run: |
          if [ -n "${{ secrets.anthropic-api-key }}" ] || [ -n "${{ secrets.claude-code-oauth-token }}" ]; then
            echo "do-auto-fix=true" >> $GITHUB_OUTPUT
          else
            echo "do-auto-fix=false" >> $GITHUB_OUTPUT
          fi

      - if: ${{ steps.plan.outputs.has-diff == 'true' && steps.check-webhook.outputs.do-notify == 'true' }}
        uses: gmo-media/tofu-actions/notify-drift@v4
        with:
          dir: ${{ matrix.dir }}
          plan: ${{ steps.plan.outputs.plan }}
          additional-message: ${{ steps.check-auto-fix.outputs.do-auto-fix == 'true' && 'Claude is on the way to creating a PR...' || 'Please review the changes and fix manually.' }}
          webhook: ${{ secrets.drift-notify-webhook }}

      - if: ${{ steps.plan.outputs.has-diff == 'true' && steps.check-auto-fix.outputs.do-auto-fix == 'true' }}
        uses: gmo-media/tofu-actions/drift-fix-claude@v4
        with:
          dir: ${{ matrix.dir }}
          plan: ${{ steps.plan.outputs.plan }}
          github-token: ${{ secrets.github-token }}
          anthropic-api-key: ${{ secrets.claude-api-key }}
          claude-code-oauth-token: ${{ secrets.claude-code-oauth-token }}

      # Simply fail to notify the user if no webhook is given
      - if: ${{ steps.plan.outputs.has-diff == 'true' && steps.check-webhook.outputs.do-notify == 'false' }}
        shell: bash
        run: |
          echo "Drift detected in ${{ matrix.dir }}."
          exit 1

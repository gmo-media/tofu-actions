# Plan and apply on pull requests
name: CI

on:
  workflow_call:
    inputs:
      auth-mode:
        description: Authentication mode (aws-oidc or aws-cred, aws-cred is deprecated)
        type: string
        default: aws-oidc
      aws-cred:
        description: AWS credentials (required when auth-mode is aws-cred)
        type: string
      aws-region:
        description: AWS region (required when auth-mode is aws-oidc)
        type: string
        default: ap-northeast-1
      aws-plan-role:
        description: >-
          AWS role to assume for planning (required when auth-mode is aws-oidc)
          e.g. arn:aws:iam::0123456789:role/my-plan-role-name
        type: string
      aws-apply-role:
        description: >-
          AWS role to assume for applying (required when auth-mode is aws-oidc)
          e.g. arn:aws:iam::0123456789:role/my-apply-role-name
        type: string

      drift-notify-webhook:
        description: Slack webhook URL for drift notification
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version

      - run: tofu fmt -recursive -check

  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: prepare
        uses: gmo-media/tofu-actions/prepare@v2
    outputs:
      strategy: ${{ steps.prepare.outputs.strategy }}
      merged-pr-run-id: ${{ steps.prepare.outputs.merged-pr-run-id }}

  plan:
    needs: [ prepare ]
    name: Plan (${{ matrix.dir }})
    if: ${{ github.event_name == 'pull_request' && needs.prepare.outputs.strategy != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.strategy) }}
    runs-on: ubuntu-latest
    steps:
      - if: ${{ inputs.auth-mode == 'aws-cred' }}
        uses: gmo-media/tofu-actions/setup-aws-credentials@v2
        with:
          aws_credentials: ${{ inputs.aws-cred }}
      - if: ${{ inputs.auth-mode == 'aws-oidc' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.aws-plan-role }}

      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version

      - uses: gmo-media/tofu-actions/plan@v2
        with:
          dir: ${{ matrix.dir }}

  plan-comment:
    needs: [ prepare, plan ]
    if: ${{ always() && github.event_name == 'pull_request' }}
    name: Plan comment
    runs-on: ubuntu-latest
    steps:
      - uses: gmo-media/tofu-actions/plan-comment@v2

  apply:
    needs: [ prepare ]
    name: Apply (${{ matrix.dir }})
    if: ${{ github.event_name == 'push' && needs.prepare.outputs.strategy != '[]' && needs.prepare.outputs.merged-pr-run-id != '' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.strategy) }}
    runs-on: ubuntu-latest
    steps:
      - if: ${{ inputs.auth-mode == 'aws-cred' }}
        uses: gmo-media/tofu-actions/setup-aws-credentials@v2
        with:
          aws_credentials: ${{ inputs.aws-cred }}
      - if: ${{ inputs.auth-mode == 'aws-oidc' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.aws-apply-role }}

      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version

      - uses: gmo-media/tofu-actions/apply@v2
        with:
          dir: ${{ matrix.dir }}
          run-id: ${{ needs.prepare.outputs.merged-pr-run-id }}

  drift-check:
    needs: [ prepare ]
    name: Drift check (${{ matrix.dir }})
    if: ${{ github.event_name == 'push' && needs.prepare.outputs.strategy != '[]' && needs.prepare.outputs.merged-pr-run-id == '' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.strategy) }}
    runs-on: ubuntu-latest
    steps:
      - if: ${{ inputs.auth-mode == 'aws-cred' }}
        uses: gmo-media/tofu-actions/setup-aws-credentials@v2
        with:
          aws_credentials: ${{ inputs.aws-cred }}
      - if: ${{ inputs.auth-mode == 'aws-oidc' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.aws-plan-role }}

      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version

      - id: plan
        uses: gmo-media/tofu-actions/plan@v2
        with:
          dir: ${{ matrix.dir }}
      - if: ${{ steps.plan.outputs.has-diff == 'true' }}
        uses: gmo-media/tofu-actions/notify-drift@v2
        with:
          dir: ${{ matrix.dir }}
          plan: ${{ steps.plan.outputs.plan }}
          webhook: ${{ inputs.drift-notify-webhook }}
